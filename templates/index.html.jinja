<!DOCTYPE html>
	<head>
        <meta charset="utf-8">
	    <meta name="viewport" content="width=device-width, shrink-to-fit=0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">

	    <title>{{ title }}</title>

	    <meta name="author" content="{{ author }}">
	    <meta name="description" content="{{ description }}">
        <meta name="theme-color" content="#cf3f02">
        <meta property="og:title" content="{{ title }}">
        <meta property="og:url" content="https://developmentseed.org/contributor-network/">
        <meta property="og:type" content="article">
        <meta property="og:locale" content="en_US">
        <meta property="og:image" content="https://develomentseed.org/contributor-network/site-image.jpg">
        <meta property="og:image:type" content="image/jpeg">
        <meta property="og:image:width" content="1200">
        <meta property="og:image:height" content="800">

        <link rel="shortcut icon" type="image/png" href="favicon.png" />
        <link rel="stylesheet" href="./style.css">
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible:ital,wght@0,400;0,700;1,400;1,700&family=Fira+Code:wght@300..700&display=swap" rel="stylesheet">

        <script src="./d3.v7.js"></script>
        <script src="./d3-delaunay.js"></script>
        <script src="./d3-bboxCollide.min.js"></script>
        <script src="./index.js"></script>
	</head>
	<body>
        <div id="chart-wrapper">
            <div id="chart-introduction">
                <div id="chart-title">
                    <h1>The Contributor Network of</h1>
                    <h1><span id="title-repo-name" class="central-repo">{{ central_repository }}</span></h1>
                    <p id="last-commit-date"></p>
                </div>
                 <div id="chart-intro-text">
                    <p>{{ description }}</p>

                    <p>
                        This visualization is based off of the excellent <a href="https://nbremer.github.io/ORCA/top-contributor-network/">Top Contributor Network</a> from <a href="https://github.com/nbremer">Nadieh Bremer</a>, and is licensed the same (MPL).
                    </p>
                </div>
            </div>

            <!-- The visual will be drawn here -->
            <div id="chart-container">
            </div>

        </div>


        <script>
            let params = new URLSearchParams(window.location.search)
            const REPOSITORY = "{{ central_repository }}"

            /////////////////////////////////////////////////////////
            ///////////////////////// START /////////////////////////
            /////////////////////////////////////////////////////////

            ////////////////// Datasets to Read in //////////////////
            let promises = []
            promises.push(d3.csv(`top_contributors.csv`))
            promises.push(d3.csv(`repositories.csv`))
            promises.push(d3.csv(`links.csv`))

            /////////////////// Fonts to activate ///////////////////
            const FONT_FAMILY = "Atkinson Hyperlegible"
            document.fonts.load(`normal 400 10px "${FONT_FAMILY}"`)
            document.fonts.load(`italic 400 10px "${FONT_FAMILY}"`)
            document.fonts.load(`normal 700 10px "${FONT_FAMILY}"`)
            document.fonts.load(`italic 700 10px "${FONT_FAMILY}"`)

            /////////////////// Figure out sizing ///////////////////
            // Get the div container that will hold the chart
            let container = document.getElementById("chart-container")
            // Get the width of the container
            let width = container.offsetWidth
            // You can set the height to anything you want, but the same as the width is the default
            let height = width

            ///////////////////// Start Drawing /////////////////////
            // Set-up the visual - Doesn't draw anything yet
            // NOTE: This visual still uses a random "ORCA_LEVEL" variable for now
            let ORCAVisual = createORCAVisual(container, REPOSITORY, {{ contributor_padding }})
                .width(width)
                .height(height)
                .repository(REPOSITORY)

            // Read in the data and create the visual
            document.fonts.ready.then(() => {
                Promise.all(promises).then(values => {
                    let formatDigit = d3.format(",.2r")
                    let formatPercentage = d3.format(".0%")

                    // Create a deep copy of the data in values
                    let data_raw = []
                    data_raw.push(JSON.parse(JSON.stringify(values[0]))) // top contributors
                    data_raw.push(JSON.parse(JSON.stringify(values[1]))) // repositories
                    data_raw.push(JSON.parse(JSON.stringify(values[2]))) // links

                    /////////////////////////////////////////////////
                    // Very specific to this example, but get some statistics on the data and put this in the intro text
                    // First check that the values[3] belongs to the remaining contributors and not the orca recipients
                    const remainingContributorsPresent = values[3] && values[3][0].author_name !== undefined
                    let orcaPresent = false
                    if(remainingContributorsPresent && (values[4] && values[4][0].name !== undefined)) orcaPresent = true
                    else if(!remainingContributorsPresent && (values[3] && values[3][0].name !== undefined)) orcaPresent = true

                    if(!orcaPresent) {
                        // Hide all those with a class of orca-note
                        document.querySelectorAll(".orca-note").forEach(d => d.style.display = `none`)
                    }// if

                    /////////////////////////////////////////////////
                    if(remainingContributorsPresent) {
                        let num_contributors = values[0].length + values[3].length
                        document.getElementById("repo-num-contributors").innerHTML = `~${formatDigit(num_contributors)} `
                    }// if

                    // How many contributors are there in the inner two rings
                    document.querySelectorAll(".top-contributor-num").forEach(d => d.innerHTML = `${formatDigit(values[0].length)} `)

                    /////////////////////////////////////////////////
                    // It expects the four datasets of contributors (authors), repositories, links between contributors and repositories, and remaining contributors, in that order
                    ORCAVisual(values)

                    /////////////////////////////////////////////////
                    // Get the start date of the central repository & the most recent commit date in this repository
                    // Find the REPOSITORY_FULL in the links dataset
                    let central_repo = values[1].find(d => d.repo === REPOSITORY)
                    let formatDate = d3.timeFormat("%B %Y")
                    let formatDateLong = d3.utcFormat("%B %-e, %Y")
                    // Latest commit date
                    // // It should be as simple as this:
                    // document.getElementById("last-commit-date").innerHTML = `Up to ${formatDateLong(central_repo.updatedAt)}`
                    // However, the dataset underlying the contributors is not as up to date as the repositories. So we need to get the "most recent" commit date from the links dataset
                    // If both the repo and contribution are up to date, it's better to use the line above and not what I do here below
                    // Get all the objects from values[2] where the target is the central repository
                    let links_to_central = values[2].filter(d => d.target.data && d.target.data.repo === REPOSITORY)
                    // Now get the most recent commit date from the links to the central repository
                    let most_recent_commit = d3.max(links_to_central, d => d.commit_sec_max)
                    document.getElementById("last-commit-date").innerHTML = `Including commits up to ${formatDateLong(most_recent_commit)}`
                })//promises
            })//fonts.ready

            /////////////////////////////////////////////////////////
            ////////////////// Handle page resizing /////////////////
            /////////////////////////////////////////////////////////

            let current_width = window.innerWidth
            let resizeTimer = null
            window.addEventListener("resize", function () {
                // Reset timer - Only resize if something truly appears to happen
                // So added a little timeout
                clearTimeout(resizeTimer)

                resizeTimer = setTimeout(() => {
                    // Only resize if the width is changed
                    if (window.innerWidth !== current_width) {
                        current_width = window.innerWidth

                        // Get the new sizes
                        let width = container.offsetWidth
                        let height = width

                        //Update the visual
                        ORCAVisual
                            .width(width)
                            .height(height)
                            .resize()
                    }// if

                }, 300)
            })//on resize
        </script>
	</body>
</html>
